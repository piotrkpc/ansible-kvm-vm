---
# tasks file for fake-overcloud-nodes
- name: install pkgs for KVM
  package:
      state: latest
      name: "{{ packages }}"
  vars:
    packages:
      - qemu-kvm
      - libvirt
      - libvirt-python
      - libguestfs-tools
      - virt-install
      - bridge-utils
      - qemu-img
      - qemu-system-x86

- name: Setup bridges for VMs
  import_tasks: create_bridges.yaml

- name: Create directory
  file:
      path: "{{ vms_image_location }}"
      state: directory

- name: Create image files
  command: "qemu-img create -f qcow2 {{ vms_image_location }}/{{vm_name_prefix ~'-%s.qcow2' | format(item) }} {{ vm_disk_size }}"
  args:
    creates: "{{ vms_image_location }}/{{vm_name_prefix ~'-%s.qcow2' | format(item) }}"
  loop: "{{ range(0, guest_vms_count) | list }}"

- name: Enable libvirtd
  systemd:
      name: libvirtd.service
      enabled: yes
      state: started

- name: Define VMs
  virt:
      xml: "{{ lookup('template', 'overcloud-vm.xml.j2') }}"
      command: define
  loop: "{{ range(0, guest_vms_count) | list }}"
- name: Cleanup steps
  block:
  # - name: Destroy VMs
  #   virt:
  #     command: destroy
  #     name: "{{ vm_name_prefix ~'-%s' | format(item) }}"
  #   register: result
  #   failed_when: >
  #     '"domain is not running" not in result.stderr'
  #   loop: "{{ range(0, guest_vms_count) | list }}"
  - name: List VMs
    virt:
      command: list_vms
    register: all_vms

  - name: Undefine VMs
    virt:
      command: undefine
      name: "{{ item }}" 
    loop: "{{ all_vms['list_vms'] }}"

  - name: Cleanup the disk images
    file:
        path: "{{ vms_image_location }}/{{ item }}.qcow2'}}" 
        state: absent 
    loop: "{{ all_vms['list_vms'] }}"
  - name: Remove VMs from BMC service
    shell: >-
      vbmc delete {{item}}
    loop: "{{ all_vms['list_vms'] }}"
  when: clean_vms|bool
  tags: clean_only
